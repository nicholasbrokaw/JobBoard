@model JobBoard.UI.MVC.Models.ApplicationUser
@using JobBoard.DATA.EF;

@{
	ViewBag.Title = "Details";
	JobBoardEntities db = new JobBoardEntities();
	var userDetails = db.UserDetails.Find(Model.Id);
}

<h2>Details.</h2>

<div>
	<h4>User</h4>
	<hr />
	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(ud => userDetails.FullName)
		</dt>
		<dd>
			@Html.DisplayFor(ud => userDetails.FullName)
		</dd>
		<dt>
			@Html.DisplayNameFor(model => model.Email)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.Email)
		</dd>
		<dt>
			Resume
		</dt>
		<dd>
			@if (userDetails.ResumeFilename != null)
			{
				<canvas id="resumeCanvas"></canvas>
			}
			else
			{
				<span>User has not uploaded a resume yet.</span>
			}
		</dd>
	</dl>
</div>
<h4>List of roles for this user</h4>
@if (ViewBag.RoleNames.Count == 0)
{
	<hr />
	<p>No roles found for this user.</p>
}

<table class="table">

	@foreach (var item in ViewBag.RoleNames)
	{
		<tr>
			<td>
				@item
			</td>
		</tr>
	}
</table>
<p>
	@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
	@Html.ActionLink("Back to List", "Index")
</p>

@section scripts {
	<script src="//mozilla.github.io/pdf.js/build/pdf.js"></script>
	<script>
		var pdfjsLib = window['pdfjs-dist/build/pdf'];

		var loadingTask = pdfjsLib.getDocument("../../Content/resumes/" + "@userDetails.ResumeFilename");
		loadingTask.promise.then(function (pdf) {
			pdf.getPage(1).then(function (page) {
				var scale = .8;
				var viewport = page.getViewport({ scale: scale });

				var canvas = document.getElementById('resumeCanvas');
				var context = canvas.getContext('2d');
				canvas.height = viewport.height;
				canvas.width = viewport.width;

				var renderContext = {
					canvasContext: context,
					viewport: viewport
				};
				page.render(renderContext);
			});
		});
	</script>
}