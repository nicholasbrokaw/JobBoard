@model JobBoard.DATA.EF.Application
@using JobBoard.DATA.EF

@{
	ViewBag.Title = "Review Application";

	JobBoardEntities db = new JobBoardEntities();
}

<h2>@ViewBag.Title</h2>

<div>
	<h4>Application</h4>
	<hr />
	<dl class="dl-horizontal">

		<dt>
			@Html.DisplayNameFor(model => model.OpenPosition.Position.Title)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.OpenPosition.Position.Title)
		</dd>

		@if (!User.IsInRole("Employee"))
		{
			<dt>
				@Html.DisplayNameFor(model => model.UserDetail.FullName)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.UserDetail.FullName)
			</dd>

			<dt>
				@Html.DisplayNameFor(model => model.ManagerNotes)
			</dt>
			<dd>
				@Html.DisplayFor(model => model.ManagerNotes)
			</dd>
		}

		<dt>
			@Html.DisplayNameFor(model => model.ApplicationDate)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.ApplicationDate)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ResumeFilename)
		</dt>
		<dd>
			<canvas id="resumeCanvas"></canvas>
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.OpenPosition.Location.Summary)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.OpenPosition.Location.Summary)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.ApplicationStatus.StatusName)
		</dt>
		<dd>
			@Html.DisplayFor(model => model.ApplicationStatus.StatusName)
		</dd>

	</dl>
</div>
<p>
	@if (Model.ApplicationStatusId == db.ApplicationStatuses.Where(s => s.StatusName.ToLower() == "pending").Select(s => s.ApplicationStatusId).Single() && User.IsInRole("Manager"))
	{
		@Html.ActionLink("Edit", "Edit", new { id = Model.ApplicationId }) <span>|</span>
	}
	@Html.ActionLink("Back to List", "Index")
</p>

@section scripts {
	<script src="//mozilla.github.io/pdf.js/build/pdf.js"></script>
	<script>
		var pdfjsLib = window['pdfjs-dist/build/pdf'];

		var loadingTask = pdfjsLib.getDocument("../../Content/resumes/" + "@Model.ResumeFilename");
		loadingTask.promise.then(function (pdf) {
			pdf.getPage(1).then(function (page) {
				var scale = .8;
				var viewport = page.getViewport({ scale: scale });

				var canvas = document.getElementById('resumeCanvas');
				var context = canvas.getContext('2d');
				canvas.height = viewport.height;
				canvas.width = viewport.width;

				var renderContext = {
					canvasContext: context,
					viewport: viewport
				};
				page.render(renderContext);
			});
		});
	</script>
}